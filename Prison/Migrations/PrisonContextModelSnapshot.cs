// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prison.Data;

#nullable disable

namespace Prison.Migrations
{
    [DbContext(typeof(PrisonContext))]
    partial class PrisonContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JobPrisoner", b =>
                {
                    b.Property<int>("JobsId")
                        .HasColumnType("int");

                    b.Property<int>("PrisonersId")
                        .HasColumnType("int");

                    b.HasKey("JobsId", "PrisonersId");

                    b.HasIndex("PrisonersId");

                    b.ToTable("JobPrisoner");
                });

            modelBuilder.Entity("Prison.Models.Cell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CellBlockId")
                        .HasColumnType("int");

                    b.Property<int>("MaximumCapacity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CellBlockId");

                    b.ToTable("Cell");
                });

            modelBuilder.Entity("Prison.Models.CellBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("CellBlock");
                });

            modelBuilder.Entity("Prison.Models.Crime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MinimalPunishment")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecurityLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Crime");
                });

            modelBuilder.Entity("Prison.Models.Guard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("CellBlockId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<int>("Weapon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CellBlockId");

                    b.ToTable("Guard");
                });

            modelBuilder.Entity("Prison.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DailyWage")
                        .HasColumnType("int");

                    b.Property<int>("JobType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("Prison.Models.Prisoner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CellId")
                        .HasColumnType("int");

                    b.Property<int>("CrimeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImprisonmentEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ImprisonmentStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegistrationNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CellId");

                    b.HasIndex("CrimeId");

                    b.ToTable("Prisoner");
                });

            modelBuilder.Entity("Prison.Models.PrisonerVisitorRelation", b =>
                {
                    b.Property<int>("PrisonerId")
                        .HasColumnType("int");

                    b.Property<int>("VisitorId")
                        .HasColumnType("int");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.HasKey("PrisonerId", "VisitorId");

                    b.HasIndex("VisitorId");

                    b.ToTable("PrisonerVisitorRelation");
                });

            modelBuilder.Entity("Prison.Models.ReeducationMeeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MaximumNumberOfPrisoners")
                        .HasColumnType("int");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("ReeducationMeeting");
                });

            modelBuilder.Entity("Prison.Models.ReeducationProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReeducationProgram");
                });

            modelBuilder.Entity("Prison.Models.ReeducationStaff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QualificationsType")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReeducationStaff");
                });

            modelBuilder.Entity("Prison.Models.Visitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Visitor");
                });

            modelBuilder.Entity("Prison.Models.Warden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("EmploymentStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Warden");
                });

            modelBuilder.Entity("PrisonerReeducationMeeting", b =>
                {
                    b.Property<int>("MeetingsId")
                        .HasColumnType("int");

                    b.Property<int>("PrisonersId")
                        .HasColumnType("int");

                    b.HasKey("MeetingsId", "PrisonersId");

                    b.HasIndex("PrisonersId");

                    b.ToTable("PrisonerReeducationMeeting");
                });

            modelBuilder.Entity("ReeducationProgramReeducationStaff", b =>
                {
                    b.Property<int>("ProgramsId")
                        .HasColumnType("int");

                    b.Property<int>("ReeducationStaffId")
                        .HasColumnType("int");

                    b.HasKey("ProgramsId", "ReeducationStaffId");

                    b.HasIndex("ReeducationStaffId");

                    b.ToTable("ReeducationProgramReeducationStaff");
                });

            modelBuilder.Entity("JobPrisoner", b =>
                {
                    b.HasOne("Prison.Models.Job", null)
                        .WithMany()
                        .HasForeignKey("JobsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prison.Models.Prisoner", null)
                        .WithMany()
                        .HasForeignKey("PrisonersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Prison.Models.Cell", b =>
                {
                    b.HasOne("Prison.Models.CellBlock", "CellBlock")
                        .WithMany("Cells")
                        .HasForeignKey("CellBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CellBlock");
                });

            modelBuilder.Entity("Prison.Models.Guard", b =>
                {
                    b.HasOne("Prison.Models.CellBlock", null)
                        .WithMany("Patrols")
                        .HasForeignKey("CellBlockId");
                });

            modelBuilder.Entity("Prison.Models.Prisoner", b =>
                {
                    b.HasOne("Prison.Models.Cell", "Cell")
                        .WithMany("Prisoners")
                        .HasForeignKey("CellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prison.Models.Crime", "Crime")
                        .WithMany()
                        .HasForeignKey("CrimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cell");

                    b.Navigation("Crime");
                });

            modelBuilder.Entity("Prison.Models.PrisonerVisitorRelation", b =>
                {
                    b.HasOne("Prison.Models.Prisoner", "Prisoner")
                        .WithMany("PrisonerVisitorRelations")
                        .HasForeignKey("PrisonerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prison.Models.Visitor", "Visitor")
                        .WithMany("PrisonerVisitorRelations")
                        .HasForeignKey("VisitorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prisoner");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("Prison.Models.ReeducationMeeting", b =>
                {
                    b.HasOne("Prison.Models.ReeducationProgram", "Program")
                        .WithMany("Meetings")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("PrisonerReeducationMeeting", b =>
                {
                    b.HasOne("Prison.Models.ReeducationMeeting", null)
                        .WithMany()
                        .HasForeignKey("MeetingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prison.Models.Prisoner", null)
                        .WithMany()
                        .HasForeignKey("PrisonersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReeducationProgramReeducationStaff", b =>
                {
                    b.HasOne("Prison.Models.ReeducationProgram", null)
                        .WithMany()
                        .HasForeignKey("ProgramsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prison.Models.ReeducationStaff", null)
                        .WithMany()
                        .HasForeignKey("ReeducationStaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Prison.Models.Cell", b =>
                {
                    b.Navigation("Prisoners");
                });

            modelBuilder.Entity("Prison.Models.CellBlock", b =>
                {
                    b.Navigation("Cells");

                    b.Navigation("Patrols");
                });

            modelBuilder.Entity("Prison.Models.Prisoner", b =>
                {
                    b.Navigation("PrisonerVisitorRelations");
                });

            modelBuilder.Entity("Prison.Models.ReeducationProgram", b =>
                {
                    b.Navigation("Meetings");
                });

            modelBuilder.Entity("Prison.Models.Visitor", b =>
                {
                    b.Navigation("PrisonerVisitorRelations");
                });
#pragma warning restore 612, 618
        }
    }
}
